buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'ru.vyarus:gradle-java-lib-plugin:1.0.5'
    classpath 'ru.vyarus:gradle-github-info-plugin:1.1.0'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
  }
}

plugins {
  id 'pl.allegro.tech.build.axion-release' version '1.8.1'
}

scmVersion {
  tag {
    prefix = 'v'
    versionSeparator = ''
  }
}

allprojects {
  version = scmVersion.version

  tasks.withType(Test) {
    testLogging {
      exceptionFormat = 'full'
    }
    afterSuite { descriptor, result ->
      def indicator = "\u001B[32m✓\u001b[0m"
      if (result.failedTestCount > 0) {
        indicator = "\u001B[31m✘\u001b[0m"
      }
      logger.lifecycle("$indicator Test ${descriptor.name}; Executed: ${result.testCount}/\u001B[32m${result.successfulTestCount}\u001B[0m/\u001B[31m${result.failedTestCount}\u001B[0m")
    }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'ru.vyarus.github-info'
  apply plugin: 'ru.vyarus.java-lib'
  apply plugin: 'jacoco'
  apply plugin: 'com.github.kt3k.coveralls'

  group = 'com.tqdev.metrics'

  repositories {
    mavenCentral()
  }

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  configurations.compile.transitive = false

  jacoco {
    toolVersion = "0.7.9"
  }

  test {
    jacoco {
      append = false
      destinationFile = file("$buildDir/jacoco.exec")
    }
  }

  jacocoTestReport {
    reports {
      xml.enabled true
    }
  }

  build.dependsOn jacocoTestReport

  coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
  }

  tasks.coveralls {
    onlyIf { System.env.'CI' }
  }

  github {
    user 'mevdschee'
    license 'MIT'
    repository 'tqdev-metrics'
  }

  pom {
    description 'TQdev.com\'s Metrics'
    url 'https://tqdev.com/'
    developers {
      developer {
        id "mevdschee"
        name "Maurits van der Schee"
        email "maurits@vdschee.nl"
        roles {
          role "Lead developer"
        }
      }
    }
  }
}
